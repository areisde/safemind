apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-unified-config
  namespace: observability
data:
  promtail.yaml: |
    server:
      http_listen_port: 3101
      grpc_listen_port: 9096
      log_level: info

    clients:
      - url: http://loki-gateway.observability.svc.cluster.local/loki/api/v1/push

    positions:
      filename: /tmp/positions.yaml

    scrape_configs:
      # Universal Kubernetes pod logs with smart JSON parsing
      - job_name: kubernetes-pods-universal
        kubernetes_sd_configs:
          - role: pod
        pipeline_stages:
          - cri: {}
          # Try to parse as JSON if possible (for structured logs like LLM metrics)
          - json:
              expressions:
                timestamp: asctime
                logger_name: name
                level: levelname
                message: message
                # LLM-specific fields (will be ignored if not present)
                request_id: request_id
                model: model
                input_tokens: input_tokens
                output_tokens: output_tokens
                total_tokens: total_tokens
                processing_time: processing_time_seconds
                energy_consumption: energy_consumption_kwh
                cost: cost_usd
                status: status
              drop_malformed: false  # Don't drop non-JSON logs
          # Create labels from parsed fields
          - labels:
              logger_name:
              level:
              model:
              status:
              request_id:
          # Clean up the message for display
          - template:
              source: message
              template: '{{ if .request_id }}{{ .logger_name }}: {{ .message }}{{ else }}{{ .message }}{{ end }}'
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_controller_name]
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            target_label: __tmp_controller_name
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name, __meta_kubernetes_pod_label_app, __tmp_controller_name, __meta_kubernetes_pod_name]
            regex: ^;*([^;]+)(;.*)?$
            target_label: app
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance, __meta_kubernetes_pod_label_instance]
            regex: ^;*([^;]+)(;.*)?$
            target_label: instance
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component, __meta_kubernetes_pod_label_component]
            regex: ^;*([^;]+)(;.*)?$
            target_label: component
          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: node
          - source_labels: [__meta_kubernetes_namespace_name]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_pod_container_name]
            target_label: __path__
          - action: replace
            source_labels: [__meta_kubernetes_pod_container_id]
            regex: ^(\S+)://(.*)$
            replacement: $1
            target_label: container_runtime
          - action: replace
            source_labels: [__meta_kubernetes_pod_container_id]
            regex: ^(\S+)://(.*)$
            replacement: $2
            target_label: container_id
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: drop
            regex: ^$
            source_labels: [__meta_kubernetes_pod_label_name]
          # Focus on key namespaces
          - source_labels: [__meta_kubernetes_namespace_name]
            action: keep
            regex: (llm|observability|default|kube-system)
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail-unified
  namespace: observability
spec:
  selector:
    matchLabels:
      name: promtail-unified
  template:
    metadata:
      labels:
        name: promtail-unified
    spec:
      serviceAccount: promtail
      containers:
        - name: promtail
          image: grafana/promtail:2.9.0
          args:
            - -config.file=/etc/promtail/promtail.yaml
            - -client.url=http://loki-gateway.observability.svc.cluster.local/loki/api/v1/push
          ports:
            - containerPort: 3101
              name: http-metrics
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
      volumes:
        - name: config
          configMap:
            name: promtail-unified-config
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
